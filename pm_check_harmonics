#!/usr/bin/env python3

import sys
import os
import os.path
import glob
import shutil
import numpy as np


def check_if_already_known(P_cand_ms, numharm):
       
       # Loop over all the known periods of the pulsars in the cluster
       print()
       print("*****************************************")
       P = P_cand_ms
       
       print("P_cand_ms = %.7f " % (P))
       
       print("Checking harmonics....")
       print()
       # Harmonics
       for nh in range(2, numharm+1):
              for n in range(1, numharm+1):

                     P_ms_nh = (n/nh) *P
                     print("P=%.4f ms (%.4f Hz)->nh = %d/%d  --> = %.10f " % (P_cand_ms, 1./(P_cand_ms/1000.), n, nh, P_ms_nh))

       # Subharmonics  / included above
       #for ns in range(2, numharm + 1):
       #       for n in range(1, numharm):
       #              P_ms_ns = P * ns / n
       #              #print("ns = %d/%d  --> = %.10f " % (n, ns, P_ms_ns))


numharm = 16
flag_foldall = 0
string_nosearch = ""
# SHELL ARGUMENTS
if (len(sys.argv) == 1):
       print("USAGE: %s {-cand_ms [Pms] | -cand_Hz [f_Hz]} [-numharm 16]" % (os.path.basename(sys.argv[0])))
       exit()
else:
       for j in range(1, len(sys.argv)):
              if (sys.argv[j] == "-cand_ms"):
                     list_P_cand_ms = np.array([np.float(x) for x in sys.argv[j+1].split(",")])
                     print("list_P_cand_ms = ", list_P_cand_ms)

              if (sys.argv[j] == "-cand_Hz"):
                     list_P_cand_ms = np.array([1000*(1./np.float(x)) for x in sys.argv[j+1].split(",")])
                     print("list_P_cand_ms = ", list_P_cand_ms)

                     
              if (sys.argv[j] == "-numharm"):
                     numharm = int(sys.argv[j+1])
                     
for i in range(len(list_P_cand_ms)):
       P_cand_ms = list_P_cand_ms[i]
       
       print()
       print("*******************************************************************************************")
       print("                     P_cand_ms = %.6f " % (P_cand_ms))
       print("*******************************************************************************************")
       
       check_if_already_known(P_cand_ms, numharm)
